<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Charles</title>
  <icon>http://charles-xcz.github.io/icon.png</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://charles-xcz.github.io/"/>
  <updated>2020-02-29T15:57:18.621Z</updated>
  <id>http://charles-xcz.github.io/</id>
  
  <author>
    <name>Charles</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>并发编程之——volatile</title>
    <link href="http://charles-xcz.github.io/2020/02/29/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B9%8B-volatile/"/>
    <id>http://charles-xcz.github.io/2020/02/29/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B9%8B-volatile/</id>
    <published>2020-02-29T15:49:56.429Z</published>
    <updated>2020-02-29T15:57:18.621Z</updated>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-volatile特征&quot;&gt;1.  volatile特征&lt;a class=&quot;post-anchor&quot; href=&quot;#1-volatile特征&quot;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;volatile&lt;/strong&gt;是Java虚拟机提供
      
    
    </summary>
    
    
      <category term="Java" scheme="http://Charles-xcz.github.io/categories/Java/"/>
    
      <category term="高并发" scheme="http://Charles-xcz.github.io/categories/Java/%E9%AB%98%E5%B9%B6%E5%8F%91/"/>
    
    
      <category term="多线程" scheme="http://Charles-xcz.github.io/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
      <category term="volatile" scheme="http://Charles-xcz.github.io/tags/volatile/"/>
    
  </entry>
  
  <entry>
    <title>什么是红黑树？</title>
    <link href="http://charles-xcz.github.io/2020/02/29/%E8%81%8A%E8%81%8A%E7%BA%A2%E9%BB%91%E6%A0%91/"/>
    <id>http://charles-xcz.github.io/2020/02/29/%E8%81%8A%E8%81%8A%E7%BA%A2%E9%BB%91%E6%A0%91/</id>
    <published>2020-02-29T10:12:42.987Z</published>
    <updated>2020-02-29T10:12:17.047Z</updated>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-定义&quot;&gt;1. 定义&lt;a class=&quot;post-anchor&quot; href=&quot;#1-定义&quot;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;红黑树是满足下列条件的&lt;strong&gt;二叉查找树&lt;/strong&gt;：&lt;br&gt;    每个节点都带有红色或黑色。节点的颜色由以下规则确定：&lt;br&gt; 
      
    
    </summary>
    
    
      <category term="数据结构与算法" scheme="http://Charles-xcz.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="红黑树" scheme="http://Charles-xcz.github.io/tags/%E7%BA%A2%E9%BB%91%E6%A0%91/"/>
    
      <category term="数据结构" scheme="http://Charles-xcz.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>JVM学习(1)——类加载、连接与初始化</title>
    <link href="http://charles-xcz.github.io/2020/02/29/JVM%E5%AD%A6%E4%B9%A0(1)%E2%80%94%E2%80%94%E7%B1%BB%E5%8A%A0%E8%BD%BD%E3%80%81%E8%BF%9E%E6%8E%A5%E4%B8%8E%E5%88%9D%E5%A7%8B%E5%8C%96/"/>
    <id>http://charles-xcz.github.io/2020/02/29/JVM%E5%AD%A6%E4%B9%A0(1)%E2%80%94%E2%80%94%E7%B1%BB%E5%8A%A0%E8%BD%BD%E3%80%81%E8%BF%9E%E6%8E%A5%E4%B8%8E%E5%88%9D%E5%A7%8B%E5%8C%96/</id>
    <published>2020-02-29T01:56:48.000Z</published>
    <updated>2020-02-29T11:31:47.665Z</updated>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;在Java代码中，类型的&lt;strong&gt;加载&lt;/strong&gt;、&lt;strong&gt;连接&lt;/strong&gt;与&lt;strong&gt;初始化&lt;/strong&gt;过程都是在程序&lt;strong&gt;运行期间&lt;/strong&gt;完成的。这提供了更大的灵活性，增加了更多的可能性
      
    
    </summary>
    
    
      <category term="java" scheme="http://Charles-xcz.github.io/categories/java/"/>
    
    
      <category term="JVM" scheme="http://Charles-xcz.github.io/tags/JVM/"/>
    
  </entry>
  
  <entry>
    <title>距离向量路由选择</title>
    <link href="http://charles-xcz.github.io/2019/11/06/%E8%B7%AF%E5%BE%84%E5%90%91%E9%87%8F%E8%B7%AF%E7%94%B1%E9%80%89%E6%8B%A9/"/>
    <id>http://charles-xcz.github.io/2019/11/06/%E8%B7%AF%E5%BE%84%E5%90%91%E9%87%8F%E8%B7%AF%E7%94%B1%E9%80%89%E6%8B%A9/</id>
    <published>2019-11-06T14:02:00.696Z</published>
    <updated>2020-02-29T07:52:42.783Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;​    &lt;strong&gt;距离向量路由选择是通过对Bellman-Ford算法进行适当修改，找到任意两结点之间的最短路径。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​    &lt;strong&gt;先介绍一下Bellman-Ford算法：&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;1-Be
      
    
    </summary>
    
    
      <category term="计算机基础" scheme="http://Charles-xcz.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="网络" scheme="http://Charles-xcz.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
</feed>
